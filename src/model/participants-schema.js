const mongoose = require("mongoose");
const Perks = require("./perks-schema");
const { Schema } = mongoose;

const participantsSchema = new Schema(
  {
    allInPings: Number,
    assistMePings: Number,
    assists: Number,
    baitPings: Number,
    baronKills: Number,
    basicPings: Number,
    bountyLevel: Number,
    challenges: Object,
    champExperience: Number,
    champLevel: Number,
    championId: Number,
    championName: { type: String, index: true },
    championTransform: Number,
    commandPings: Number,
    consumablesPurchased: Number,
    damageDealtToBuildings: Number,
    damageDealtToObjectives: Number,
    damageDealtToTurrets: Number,
    damageSelfMitigated: Number,
    dangerPings: Number,
    deaths: Number,
    detectorWardsPlaced: Number,
    doubleKills: Number,
    dragonKills: Number,
    eligibleForProgression: Boolean,
    enemyMissingPings: Number,
    enemyVisionPings: Number,
    firstBloodAssist: Boolean,
    firstBloodKill: Boolean,
    firstTowerAssist: Boolean,
    firstTowerKill: Boolean,
    gameEndedInEarlySurrender: Boolean,
    gameEndedInSurrender: Boolean,
    getBackPings: Number,
    goldEarned: Number,
    goldSpent: Number,
    holdPings: Number,
    individualPosition: String,
    inhibitorKills: Number,
    inhibitorTakedowns: Number,
    inhibitorsLost: Number,
    item0: Number,
    item1: Number,
    item2: Number,
    item3: Number,
    item4: Number,
    item5: Number,
    item6: Number,
    itemsPurchased: Number,
    killingSprees: Number,
    kills: Number,
    lane: { type: String, index: true },
    largestCriticalStrike: Number,
    largestKillingSpree: Number,
    largestMultiKill: Number,
    longestTimeSpentLiving: Number,
    magicDamageDealt: Number,
    magicDamageDealtToChampions: Number,
    magicDamageTaken: Number,
    needVisionPings: Number,
    neutralMinionsKilled: Number,
    nexusKills: Number,
    nexusTakedowns: Number,
    nexusLost: Number,
    objectiveStolen: Number,
    objectiveStolenAssists: Number,
    onMyWayPings: Number,
    participantId: { type: Number, index: true },
    pentaKills: Number,
    perks: [Perks],
    physicalDamageDealt: Number,
    physicalDamageDealtToChampions: Number,
    physicalDamageTaken: Number,
    profileIcon: Number,
    pushPings: Number,
    puuid: { type: String, index: true },
    quadraKills: Number,
    riotIdName: String,
    riotIdTagLine: String,
    role: String,
    sightWardsBoughtInGame: Number,
    spell1Casts: Number,
    spell2Casts: Number,
    spell3Casts: Number,
    spell4Casts: Number,
    summoner1Casts: Number,
    summoner1Id: Number,
    summoner2Casts: Number,
    summoner2Id: Number,
    summonerId: { type: String, index: true, unique: false },
    summonerName: { type: String, index: true, unique: false },
    teamEarlySurrendered: Boolean,
    teamId: Number,
    teamPosition: String,
    timeCCingOthers: Number,
    timePlayed: Number,
    totalDamageDealt: Number,
    totalDamageDealtToChampions: Number,
    totalDamageShieldedOnTeammates: Number,
    totalDamageTaken: Number,
    totalHeal: Number,
    totalHealsOnTeammates: Number,
    totalMinionsKilled: Number,
    totalTimeCCDealt: Number,
    totalTimeSpentDead: Number,
    totalUnitsHealed: Number,
    tripleKills: Number,
    trueDamageDealt: Number,
    trueDamageDealtToChampions: Number,
    trueDamageTaken: Number,
    turretKills: Number,
    turretTakedowns: Number,
    turretsLost: Number,
    unrealKills: Number,
    visionClearedPings: Number,
    visionScore: Number,
    visionWardsBoughtInGame: Number,
    wardsKilled: Number,
    wardsPlaced: Number,
    win: { type: Boolean, index: true },
  },
  { _id: false, timestamps: false }
);

module.exports = participantsSchema;
